<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="32" failures="0" errors="0" time="16.139">
  <testsuite name="src\__tests__\types\profile.test.ts" errors="0" failures="0" skipped="0" timestamp="2025-10-12T09:41:33" time="1.199" tests="20">
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return no errors for valid dietary restriction" time="0.008">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return error for missing name" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return error for empty name" time="0.001">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return error for name too long" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return error for invalid restriction type" time="0.001">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return error for invalid severity level" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › validateDietaryRestriction" name="should return multiple errors for multiple invalid fields" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › validateSeverityLevel" name="should return true for valid severity levels" time="0.001">
    </testcase>
    <testcase classname="Profile Type Validation › validateSeverityLevel" name="should return false for invalid severity level" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › validateAllergenType" name="should return true for valid allergen types" time="0.001">
    </testcase>
    <testcase classname="Profile Type Validation › validateAllergenType" name="should return false for invalid allergen type" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › createDietaryRestriction" name="should create dietary restriction with defaults" time="0.001">
    </testcase>
    <testcase classname="Profile Type Validation › createDietaryRestriction" name="should create dietary restriction with custom severity" time="0.003">
    </testcase>
    <testcase classname="Profile Type Validation › createDietaryRestriction" name="should trim whitespace from name" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getSeverityDisplayName" name="should return correct display names" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getSeverityDisplayName" name="should return Unknown for invalid severity" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getAllergenDisplayName" name="should return correct display names" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getAllergenDisplayName" name="should return Unknown for invalid allergen type" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getSeverityColor" name="should return correct colors for severity levels" time="0">
    </testcase>
    <testcase classname="Profile Type Validation › getSeverityColor" name="should return gray for invalid severity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="src\__tests__\components\profile\RestrictionCard.test.tsx" errors="0" failures="0" skipped="0" timestamp="2025-10-12T09:41:33" time="1.23" tests="12">
    <testcase classname="RestrictionCard Logic › Restriction Category Detection" name="should correctly identify allergen restrictions" time="0.01">
    </testcase>
    <testcase classname="RestrictionCard Logic › Restriction Category Detection" name="should correctly identify religious restrictions" time="0.001">
    </testcase>
    <testcase classname="RestrictionCard Logic › Restriction Category Detection" name="should correctly identify lifestyle restrictions" time="0">
    </testcase>
    <testcase classname="RestrictionCard Logic › Severity Slider Logic" name="should show severity slider for allergen restrictions" time="0.001">
    </testcase>
    <testcase classname="RestrictionCard Logic › Severity Slider Logic" name="should NOT show severity slider for religious restrictions" time="0.001">
    </testcase>
    <testcase classname="RestrictionCard Logic › Severity Slider Logic" name="should NOT show severity slider for lifestyle restrictions" time="0">
    </testcase>
    <testcase classname="RestrictionCard Logic › Icon Selection Logic" name="should use AllergenIcon for allergen restrictions" time="0">
    </testcase>
    <testcase classname="RestrictionCard Logic › Icon Selection Logic" name="should use emoji icons for religious restrictions" time="0.001">
    </testcase>
    <testcase classname="RestrictionCard Logic › Icon Selection Logic" name="should use emoji icons for lifestyle restrictions" time="0.006">
    </testcase>
    <testcase classname="RestrictionCard Logic › Badge Display Logic" name="should show severity badge for allergen restrictions" time="0">
    </testcase>
    <testcase classname="RestrictionCard Logic › Badge Display Logic" name="should show active badge for religious restrictions" time="0">
    </testcase>
    <testcase classname="RestrictionCard Logic › Badge Display Logic" name="should show active badge for lifestyle restrictions" time="0">
    </testcase>
  </testsuite>
</testsuites>